---------------
I. Introduction
---------------
This is a FTP Protocol Server module for Apache 2.0 and 2.1.
It is based loosly on the mod_pop3 code base, so many thanks to the author of 
mod_pop3. This is still a developmental module, and directives and features may
change without notice from release to release.  There is a sample configuration
provided at the end of this document.

----------------------------------------
II. Building and installing instructions
----------------------------------------
1) ./configure --with-apache=/path/to/apache
2) make
3) su -c "make install"

-------------------------
III. Sample configuration
-------------------------
a sample config entry

Listen 21
<VirtualHost *:21>
	DocumentRoot /var/ftp
	FTPprotocol On
	FTPShowRealPermissions Off
	FTPAllowActive On
	FTPMinPort 1024
	FTPPaxPort 65535
	<Directory /var/ftp>
		AuthUserFile /usr/local/httpd/ftp
		Anonymous_Authoritative oN
		AuthAuthoritative Off
		Anonymous_NoUserID off
		Anonymous_MustGiveEmail off
		Anonymous_VerifyEmail off
		Anonymous_LogEmail off
		Anonymous anonymous guest
		AuthName ftp
		AuthType Basic
		require valid-user

		order allow,deny
		allow from all
	</Directory>
	<Location />
		<LimitExtept CHDIR GET LIST>
			deny from all
		</LimitExcept>
	</Location>
	<Location /upload>
		<LimitExcept LIST PUT XMKD CHDIR>
			deny from all
		</LimitExcept>
	</Location>
</VirtualHost>

----------------------------
IV. Configuration Directives
----------------------------
FTPProtocol
	Whether this server is serving the FTP protocol. The default is Off.

FTPShowRealPermissions
	Show Real Permissions of files? The default is Off.
	When Off, files will show as mode 644, and directories as 755.

FTPFakeGroup
	If FTPShowRealPermissions of Off then this is the group name that is
	displayed in directory listings. Default is ftp.

FTPFakeUser
	If FTPShowRealPermissions of Off then this is the user name that is
	displayed in directory listings. Default is ftp.

FTPAllowActive
	Allow active(PORT) data transfers from the server. The default is On.

FTPAllowFXP
	Allow FXP transfer mode.  That is to allow using two control connections to
	two different server and have them tranfer files directly to eachother. If 
	this is off then data connections are only allowed to come from the client
	that has the control connection. Default is Off.

FTPPasvMinPort
	Minimum PASV port to use for Data connections. The default value is 1024.
	This value must be less than FTPPasvMaxPort.

FTPPasvMaxPort
	Maximum PASV port to use for Data connections. The default value is 65535.
	This value must be greater than FTPPasvMinPort.

FTPChroot
	This is the chroot provider order to use for determining what chroot dir the
	user should be locked into. the providers are separate modules that must be
	loaded after mod_ftp.so (dbm,dbi, default, and fail are included);

FTPServerAnnounce
	Setting this to Off will prevent the mod_ftp/VERSION from being added to the
	server header in Apache HTTP requests. This does not change the initial
	connection line in an FTP session. The default value is on.

<Limit>
	To limit what users can and cannot do in directories the Limit and 
	LimitExcept must be used. Possible parameters for Limit are:
	  	CHDIR, GET, LIST, PUT, APPEND, DELETE, MKCOL, XRMD, MOVE
	CHDIR : ability to change into this directory (required for login)
	GET   : ability to download a file.
	LIST  : ability to get a directory listing.
	PUT   : ability to stor a file.
	APPEND: ability to append to a file (either APPE, or STOR w/ REST).
	DELETE: ability to delete a file.
	MKCOL : ability to make a directory.
	XRMD  : ability to remove a directory.
	MOVE  : ability to rename files and directories.

------------------------------
IV. 1  FTP DBM Chroot provider
------------------------------
LoadModule ftp_dbm_module   modules/mod_ftp_dbm.so
FTPChrootDBM
	The fielname of the database to use. Can be absolute or relative to the 
	server root.

FTPChrootDBMType
	The type of Database the file is (default,DB,GDBM,NDBM,SDBM)

use the dbmchroot script in the providers/dbm directory to manage the chroot
database (not currently installed by a make install)

------------------------------
IV. 2  FTP DBI Chroot provider
------------------------------
Documentation to be written

LoadModule ftp_dbi_module	modules/mod_ftp_dbi.so

----------------------------------
IV. 3  FTP default Chroot provider
----------------------------------
LoadModule ftp_default_module	modules/mod_ftp_default.so

FTPChrootPath
	This is the path that this module will return as the chroot.. It will 
	ALWAYS return this path and no other.  This is useful for a fail-back path.

-------------------------------
IV. 3  FTP fail Chroot provider
-------------------------------
LoadModule ftp_fail_module	modules/mod_ftp_fail.so

There is no configuration for this module.. Just add it to FTPChroot and any
user that hits this module will immediatly fail and not be allowed to login.
Use this in a chain of modules and this as a fail-back to deny logins if they 
do not have a chroot.

--------------------------------
V. Known issues and limitations
--------------------------------
These are some of the known issues and limitations of the module.  Also check
the TODO file for any issues that didn't make their way into this document. And
of course, if you feel the urge to actually implement something on my TODO list
feel free to, and submit it to me via a patch.

* This module has been build using Apache 2.0.48. I have had people test it
on 2.0.47 and 2.1 CVS HEAD..  But I have not officially tested it on 2.1 yet.
When an official release of 2.1 is out, then I wil test and modify my module for
this branch of Apache.

* Transfered files do NOT go through apache filters and bucket brigades.. When
I figure them out, I will support that feature.. (dynamic FTP content..)

* I have not load tested this at all.. So I do not know how well it will stand
up to stress testing. Can some people run dkftpbench on this thing?

* The code has not been thoroughly tested for security related issues.. However,
the code is relatively simple, and all ACL checks go through one function, which
passes everything to Apache, so it should be as secure as Apache.

* pass (ie. login) and cwd currently use method "GET", and will fail if GET is
restricted

* I do not support the ABOR command, currently, nor do I check for the Telnet
command sequences.. Can someone give me an example client that uses these?

* There is code in there for unfinished features, just ignore it.. It will be 
either finished or removed in future releases.

* content providers SHOULD check FTP_PLUGIN_VERSION and if it's not the same
bailout and refuse to compile as the API is going to be different.

----------------------
VI. Contact Information
----------------------
You can contact me on irc.freenode.net as nick urkle in the #apache-modules
channel. Or you can Contact me via my website http://urkle.drip.ws/. Or e-mail 
me at eddie <at> omegaware <dot> com.  Please put a meaningful subject line, 
otherwise the e-mail may get spammed. Something like, "mod_ftp patch to 
implement ipv6" would be quite acceptable.. However, "PLEASE READ THIS NOW" is 
quite unacceptable and will most likely never be read.
